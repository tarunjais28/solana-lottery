apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: artkai-landing
  name: artkai-landing
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: artkai-landing
  template:
    metadata:
      labels:
        app: artkai-landing
    spec:
      serviceAccountName: development-github-runners
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: workerGroup
                operator: In
                values:
                - "development-runners"
      tolerations:
        - key: scope
          value: runners
          operator: Equal
          effect: NoSchedule
      containers:
        - name: runner
          image: docker-public.packages.atlassian.com/sox/atlassian/bitbucket-pipelines-runner
          env:
            - name: WORKING_DIRECTORY
              value: "/tmp"
            - name: RUNTIME_PREREQUISITES_ENABLED
              value: "true"
            - name: REPOSITORY_UUID
              value: "{8cbe369c-3d58-40b6-ad5d-25ce1f886a19}"
          envFrom:
            - secretRef:
                name: artkai-landing-secrets
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: docker-containers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: var-run
              mountPath: /var/run
          # resources:
          #   requests:
          #     memory: "50Mi"
          #     cpu: "80m"
          #   limits:
          #     memory: "500Mi"
          #     cpu: "400m"
        - name: docker
          image: docker:20.10.17-dind
          securityContext:
            privileged: true
          env:
            - name: DOCKER_OPTS
              value: "--mtu=1300"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: docker-containers
              mountPath: /var/lib/docker/containers
            - name: var-run
              mountPath: /var/run
          # resources:
          #   requests:
          #     memory: "50Mi"
          #     cpu: "80m"
          #   limits:
          #     memory: "500Mi"
          #     cpu: "400m"
      volumes:
        - name: tmp
        - name: docker-containers
        - name: var-run
