/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

type ErrorWithCode = Error & { code: number };
type MaybeErrorWithCode = ErrorWithCode | null | undefined;

const createErrorFromCodeLookup: Map<number, () => ErrorWithCode> = new Map();
const createErrorFromNameLookup: Map<string, () => ErrorWithCode> = new Map();

/**
 * BalanceOverflow: 'Balance overflow'
 *
 * @category Errors
 * @category generated
 */
export class BalanceOverflowError extends Error {
  readonly code: number = 0x1770;
  readonly name: string = 'BalanceOverflow';
  constructor() {
    super('Balance overflow');
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, BalanceOverflowError);
    }
  }
}

createErrorFromCodeLookup.set(0x1770, () => new BalanceOverflowError());
createErrorFromNameLookup.set('BalanceOverflow', () => new BalanceOverflowError());

/**
 * NotEnoughBalance: 'NotEnoughBalance'
 *
 * @category Errors
 * @category generated
 */
export class NotEnoughBalanceError extends Error {
  readonly code: number = 0x1771;
  readonly name: string = 'NotEnoughBalance';
  constructor() {
    super('NotEnoughBalance');
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, NotEnoughBalanceError);
    }
  }
}

createErrorFromCodeLookup.set(0x1771, () => new NotEnoughBalanceError());
createErrorFromNameLookup.set('NotEnoughBalance', () => new NotEnoughBalanceError());

/**
 * UnbondingPeriodNotPassed: 'UnbondingPeriodNotPassed'
 *
 * @category Errors
 * @category generated
 */
export class UnbondingPeriodNotPassedError extends Error {
  readonly code: number = 0x1772;
  readonly name: string = 'UnbondingPeriodNotPassed';
  constructor() {
    super('UnbondingPeriodNotPassed');
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, UnbondingPeriodNotPassedError);
    }
  }
}

createErrorFromCodeLookup.set(0x1772, () => new UnbondingPeriodNotPassedError());
createErrorFromNameLookup.set(
  'UnbondingPeriodNotPassed',
  () => new UnbondingPeriodNotPassedError(),
);

/**
 * Attempts to resolve a custom program error from the provided error code.
 * @category Errors
 * @category generated
 */
export function errorFromCode(code: number): MaybeErrorWithCode {
  const createError = createErrorFromCodeLookup.get(code);
  return createError != null ? createError() : null;
}

/**
 * Attempts to resolve a custom program error from the provided error name, i.e. 'Unauthorized'.
 * @category Errors
 * @category generated
 */
export function errorFromName(name: string): MaybeErrorWithCode {
  const createError = createErrorFromNameLookup.get(name);
  return createError != null ? createError() : null;
}
